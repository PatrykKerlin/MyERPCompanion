services:

  postgres:
    build:
      context: ./rest-api
      dockerfile: dockerfile-db
    networks:
      - project_net
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=MyERPCompanion
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=changeme

  rest-api:
    build:
      context: ./rest-api
      dockerfile: dockerfile-api
    networks:
      - project_net
    ports:
      - "8000:8000"
    volumes:
      - ./rest-api/rest_api/:/rest_api
    environment:
      - DATABASE_URL=postgresql+asyncpg://postgres:changeme@postgres/MyERPCompanion
      - SECRET_KEY=secret
      - ALGORITHM=HS256
      - ACCESS_TOKEN_EXPIRE_MINUTES=60
      - REFRESH_TOKEN_EXPIRE_DAYS=7
      - SUPERUSER_USERNAME=admin
      - SUPERUSER_PASSWORD=admin123
      - ADMINS_GROUP_NAME=admins
      - ADMINS_GROUP_DESC=Admins
    depends_on:
      - postgres
    command:
      sh -c "uvicorn main:start_app --host 0.0.0.0 --port 8000 --reload"

  desktop-app:
    build:
      context: ./desktop-app
      dockerfile: dockerfile-desktop
    networks:
      - project_net
    volumes:
      - ./desktop-app/desktop_app/:/desktop_app
      - /tmp/.X11-unix:/tmp/.X11-unix
    environment:
      - DISPLAY=${DISPLAY}
      - API_URL=http://rest-api:8000/api
    depends_on:
      - postgres
      - rest-api
    stdin_open: true
    tty: true
    command:
      sh -c "python main.py"

#  web-app:
#    build:
#      context: ./web-app
#      dockerfile: dockerfile-web
#    networks:
#      - project_net
#    ports:
#      - "9000:9000"
#    volumes:
#      - ./web-app/web_app/:/web_app
#    command:
#      sh -c "python manage.py wait_for_redis &&
#      python manage.py wait_for_api &&
#      python manage.py runserver 0.0.0.0:9000"
#    depends_on:
#      - redis
#      - rest-api

#  redis:
#    build:
#      context: ./web-app
#      dockerfile: dockerfile-cache
#    networks:
#      - project_net
#    ports:
#      - "6379:6379"

volumes:
  postgres-data:

networks:
  project_net:
    driver: bridge