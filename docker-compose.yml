services:
  web-app:
    build:
      context: ./web-app
      dockerfile: dockerfile-web
    networks:
      - project_net
    ports:
      - "9000:9000"
    volumes:
      - ./web-app/web_app/:/web_app
    command:
      sh -c "python manage.py wait_for_redis &&
      python manage.py runserver 0.0.0.0:9000"
    depends_on:
      - redis
      - rest-api

  rest-api:
    build:
      context: ./rest-api
      dockerfile: dockerfile-api
    networks:
      - project_net
    ports:
      - "8000:8000"
    volumes:
      - ./rest-api/rest_api/:/rest_api
    command:
      sh -c "python manage.py makemigrations &&
      python manage.py wait_for_postgres &&
      python manage.py migrate &&
      python manage.py populate_db &&
      python manage.py runserver 0.0.0.0:8000"
    environment:
      - POSTGRES_HOST=postgres
      - POSTGRES_NAME=MyERPCompanion
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=changeme
      - REST_API_PORT=8000
      - REST_API_PROTOCOL=http
      - REST_API_HOSTS=127.0.0.1,localhost,rest-api
    depends_on:
      - postgres

  postgres:
    build:
      context: ./rest-api
      dockerfile: dockerfile-db
    networks:
      - project_net
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=MyERPCompanion
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=changeme

  redis:
    build:
      context: ./web-app
      dockerfile: dockerfile-cache
    networks:
      - project_net
    ports:
      - "6379:6379"

volumes:
  postgres-data:

networks:
  project_net:
    driver: bridge